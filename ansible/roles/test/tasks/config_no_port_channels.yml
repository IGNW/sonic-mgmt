- debug: msg="Configuration Test for topologies with No Port Channels"

- name: gather interface facts
  interface_facts:

- name: set initial variables
  set_fact:
    active_eth_iface_list: [] 
    ethernet_portchannel_interfaces: []
    test_ipv4_address: 10.200.4.5/31
    test_ipv6_address: fc00::ff07/126
    test_port_channel_name: test_pc
    test_vlan: 100

- name: create active interface list
  set_fact:
    active_eth_iface_list: "{{ active_eth_iface_list }} + ['{{ item.device }}']"
  when: item.active == true and "Ethernet" in item.device 
  with_items: "{{ ansible_interface_facts.values() }}"

- name: set test interface variable
  set_fact:
    test_iface: "{{ active_eth_iface_list[0] }}"
    test_vlan_iface: "{{ active_eth_iface_list[-1] }}" 
    test_portchannel_members: ["{{ active_eth_iface_list[0] }}","{{ active_eth_iface_list[-1] }}"]

# Add and remove an ipv4 address from an interface
- block:
    - name: add IP to interface
      shell: config interface ip add {{ test_iface }} {{ test_ipv4_address }}
      become: yes
    
    - name: confirm IP was added to the interface
      shell: show ip interfaces | grep {{ test_ipv4_address }} 
      register: out

    - name: verify that the IP shows up in the output 
      assert:
        that:  out.stdout | search(test_ipv4_address)

    - name: remove IP from the interface
      shell: config interface ip remove {{ test_iface }} {{ test_ipv4_address }}
      become: yes
    
    - name: confirm IP was removed from the interface
      shell: show ip interfaces | grep {{ test_ipv4_address }} || true
      register: out

    - name: verify that the IP does not show up in the output 
      assert:
        that:  not out.stdout

  rescue:
    - name: remove IP from the interface on failure
      shell: config interface ip remove {{ test_iface }} {{ test_ipv4_address }}
      become: yes

# Add and remove an ipv6 address from an interface
- block:
    - name: add IP to interface
      shell: config interface ip add {{ test_iface }} {{ test_ipv6_address }}
      become: yes

    - name: confirm IP was added to the interface
      shell: show ipv6 interfaces | grep {{ test_ipv6_address }} 
      register: out

    - name: verify that the IP shows up in the output 
      assert:
        that: out.stdout | search(test_ipv6_address)

    - name: remove IP from interface
      shell: config interface ip remove {{ test_iface }} {{ test_ipv6_address }}
      become: yes
    
    - name: confirm IP was removed from the interface
      shell: show ipv6 interfaces | grep {{ test_ipv6_address }} || true
      register: out

    - name: verify that the IP does not show up in the output 
      assert:
        that:  not out.stdout 

  rescue:
    - name: remove IP from the interface on failure
      shell: config interface ip remove {{ test_iface }} {{ test_ipv6_address }}
      become: yes

# Add and remove a vlan, add and remove a member
- block:
    - name: add vlan
      shell: config vlan add {{ test_vlan }}
      become: yes
    
    - name: confirm vlan was added 
      shell: show vlan brief 
      register: out

    - name: verify that the vlan was added 
      assert:
        that: out.stdout | search(test_vlan | string)

    - name: add the vlan to an interface
      shell: config vlan member add {{ test_vlan }} {{ test_vlan_iface }}
      become: yes

    - name: confirm vlan was member was added to the vlan
      shell: show vlan config
      register: out

    - name: verify that the member was added 
      assert:
        that: out.stdout | search(test_vlan | string)
        that: out.stdout | search(test_vlan_iface)

    - name: remove the vlan from the interface
      shell: config vlan member del {{ test_vlan }} {{ test_vlan_iface }}
      become: yes

    - name: confirm vlan was member was removed from the vlan
      shell: show vlan config
      register: out

    - name: verify that the member was removed 
      assert:
        that: not out.stdout | search(test_vlan | string)
        that: not out.stdout | search(test_vlan_iface)

    - name: remove vlan 
      shell: config vlan del {{ test_vlan }}
      become: yes
    
    - name: confirm vlan was deleted 
      shell: show vlan brief 
      register: out

    - name: verify that the vlan does not show up in the output 
      assert:
        that:  not out.stdout | search(test_vlan | string) 

  rescue:
    - name: remove vlan and member from the interface on failure
      shell: config vlan del {{ test_vlan }}
      become: yes

# Add and remove a portchannel, add and remove a member
- block:
    - name: add a port channel 
      shell: config portchannel add {{ test_port_channel_name }} 
      become: yes
    
    - name: confirm portchannel was added to the interface
      shell: show interfaces portchannel 
      register: out

    - name: verify that the portchannel shows up in the output 
      assert:
        that:  out.stdout | search("PortChannel")

    - name: add members to the portchannel
      shell: config portchannel member add {{ test_port_channel_name }} {{ item }}
      become: yes
      with_items: "{{ test_portchannel_members }}"

    - name: verify members added to the portchannel
      shell: show interfaces status
      register: out

    - name: verify info in the output
      debug:
        var: out

  rescue:
    - name: remove the portchannel on failure
      shell: config portchannel del {{ test_port_channel_name }} 
      become: yes

# Add and remove a portchannel, add and remove a member
- block:
    - name: add a port channel 
      shell: config portchannel add {{ test_port_channel_name }} 
      become: yes
    
    - name: confirm portchannel was added to the interface
      shell: show interfaces portchannel 
      register: out

    - name: verify that the portchannel shows up in the output 
      assert:
        that:  out.stdout | search("PortChannel")

    - name: add members to the portchannel
      shell: config portchannel member add {{ test_port_channel_name }} {{ item }}
      become: yes
      with_items: "{{ test_portchannel_members }}"

    - name: verify members added to the portchannel
      shell: show interfaces status
      register: out

    - name: pull out lines from output for the portchannel ports
      set_fact:
        ethernet_portchannel_interfaces: "{{ ethernet_portchannel_interfaces }} + ['{{ item }}']"
      when: "{{ item | search(test_port_channel_name) }}"
      with_items: "{{ out.stdout_lines }}"
  
    - name: check the condensed list and confirm each port channel member is in the list
      assert:
        that: ethernet_portchannel_interfaces | select('match', item)
      with_items: "{{ test_portchannel_members }}"

    - name: remove the members from the port channel
      shell: config portchannel member del {{ test_port_channel_name }} {{ item }}
      become: yes
      with_items: "{{ test_portchannel_members }}"

    - name: verify the ports have been removed
      shell: show interfaces status
      register: out

    - name: verify the portchannel name no longer shows up in the output
      assert:
        that: test_port_channel_name not in out.stdout

    - name: remove the portchannel
      shell: config portchannel del {{ test_port_channel_name }} 
      become: yes
    
    - name: verify the portchannel has been removed
      shell: show interfaces portchannel 
      register: out

    - name: verify that the portchannel is not configured
      assert:
        that: not out.stdout | search("PortChannel")

  rescue:
    - name: remove portchannel members on failure
      shell: config portchannel member del {{ test_port_channel_name }} {{ item }}
      become: yes
      with_items: "{{ test_portchannel_members }}"

    - name: remove the portchannel on failure
      shell: config portchannel del {{ test_port_channel_name }} 
      become: yes

