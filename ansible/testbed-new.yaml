#####
#
# testbed-github.yaml is designed to be a convenient config file that contains information pertaining to sonic-mgmt
# the information has been divided into the following groups: 
#   - device_groups 
#   - devices
#   - host_vars
#   - veos_groups
#   - veos
#   - testbed
#   - topology
#
# these groups when converted from yaml in python become dictionaries. 
# these dictionaries help generate files necessary for ansible to run test cases 
#
# where are files generated from: 
#   - device_groups generates: lab
#   - devices generates: fanout/secrets.yml, lab/secrets.yml, lab
#   - host_vars generates: <host_vars>.yml
#   - veos_groups generates: veos
#   - veos generates: main.yml, vm_host/creds.yml, sonic_lab_devices.csv, eos/creds.yml, veos
#   - testbed generates: testbed.csv
#   - topology generates: sonic_lab_links.csv
#
# output files created:
#   [1]  /group_vars/vm_host/main.yml
#   [2]  /group_vars/vm_host/creds.yml
#   [3]  /files/sonic_lab_devices.csv
#   [4]  /testbed.csv
#   [5]  /files/sonic_lab_links.csv
#   [6]  /group_vars/eos/creds.yml
#   [7]  /group_vars/fanout/secrets.yml
#   [8]  /group_vars/lab/secrets.yml
#   [9]  /lab
#   [10] /veos
#   [11*] /host_vars/<host_var>.yml (where * is 0 or more)
#
#####
testbed_config:
    name: testbed-github
    alias: topologyGithubTestbed
    type: Physical 

# device_groups is a dictionary that contains the groups that devices and hosts belong to. it also contains global variables under 'vars'
# device_groups is to export the lab file
# cross references with devices for ansible_host value
device_groups:                              
    lab:
        children: [sonic, fanout]                                # source: sonic-mgmt/ansible/lab 
        vars:
            mgmt_subnet_mask_length: "22"                        # source: sonic-mgmt/ansible/lab
    sonic:
        children: [sonic_seastone_dx010]                         # source: sonic-mgmt/ansible/lab
    sonic_seastone_dx010:
        host: [lab-ignw-seastone-dut-li1]                        # source: sonic-mgmt/ansible/lab
        vars:
            iface_speed: '100000'                                # source: sonic-mgmt/ansible/lab
    fanout:
        host: [lab-ignw-seastone-fan-li2]                        # source: sonic-mgmt/ansible/lab
    ptf:
        host: [ptf_ptf1]                                         # source: sonic-mgmt/ansible/lab

# devices is a dictionary that contains all devices and hosts but not ptfs (ptfs found under testbed)
# devices is used to export sonic_lab_devices, fanout/secrets, lab/secrets, lab
# there are no cross references
devices:
    lab-ignw-seastone-dut-li1:
        device_type: DevSonic                # source: sonic-mgmt/ansible/files/sonic_lab_devices-github.csv      
        hwsku: Seastone-DX010                       # source: sonic-mgmt/ansible/files/sonic_lab_devices-github.csv
        alias: dut 
        os: sonic
        credentials:                    
            username: admin 
            password: YourPaSsWoRd 
            enable_password:  
        ansible:                             
            ansible_host: 10.50.0.8/22             # source: sonic-mgmt/ansible/lab
            ansible_ssh_user: admin 
            ansible_ssh_pass: YourPaSsWoRd

    lab-ignw-seastone-fan-li2:                           
        device_type: FanoutLeaf                     # source: sonic-mgmt/ansible/files/sonic_lab_devices-github.csv
        hwsku: Seastone-DX010                     # source: sonic-mgmt/ansible/files/sonic_lab_devices-github.csv
        alias: fanout            
        credentials:                        
            username: admin                 
            password: broadcom              
        ansible:
            ansible_host: 10.50.0.7/22              # source: sonic-mgmt/ansible/files/sonic_lab_devices-github.csv
            ansible_ssh_user: admin                 # source: sonic-mgmt/ansible/group_vars/fanout/secrets.yml
            ansible_ssh_pass: broadcom              # source: sonic-mgmt/ansible/group_vars/fanout/secrets.yml
            fanout_sonic_user: admin                # source: sonic-mgmt/ansible/group_vars/fanout/secrets.yml
            fanout_sonic_password: YourPaSsWoRd     # source: sonic-mgmt/ansible/group_vars/fanout/secrets.yml

    linkedin-testbed:                               # source: sonic-mgmt/ansible/files/sonic_lab_devices-github.csv
        device_type: Server                         # source: sonic-mgmt/ansible/files/sonic_lab_devices-github.csv
        hwsku: TestServ                             # source: sonic-mgmt/ansible/files/sonic_lab_devices-github.csv
        mgmt_subnet_mask_length: "22"               # source: sonic-mgmt/ansible/lab
        alias: testbed        
        credentials:                        
            username: ignw                
            password: ignw!098              
        ansible:
            ansible_host: 10.50.0.9/22                   # source: sonic-mgmt/ansible/files/sonic_lab_devices-github.csv
            ansible_ssh_pass: ignw                       # source: sonic-mgmt/ansible/group_vars/lab/secrets.yml
            ansible_become_pass: ignw!098                # source: sonic-mgmt/ansible/group_vars/lab/secrets.yml
            sonicadmin_user: admin                       # source: sonic-mgmt/ansible/group_vars/lab/secrets.yml
            sonicadmin_password: YourPaSsWoRd            # source: sonic-mgmt/ansible/group_vars/lab/secrets.yml
            sonicadmin_initial_password: YourPaSsWoRd    # source: sonic-mgmt/ansible/group_vars/lab/secrets.yml


# host_vars is a dictionary that contains all host_var values
# host_vars is used to export the host_vars files
# there are no cross references
host_vars:
    linkedin-testbed:
        mgmt_bridge: br1                # source: sonic-mgmt/host_vars
        mgmt_prefixlen: 22              # source: sonic-mgmt/host_vars
        mgmt_gw: 10.50.0.1              # source: sonic-mgmt/host_vars
        external_port: ens6f0           # source: sonic-mgmt/host_vars

# veos_groups is a dictionary that contains all veos groups
# veos_groups is used to generate the veos file
# veos_groups cross references veos (below)
veos_groups:
    servers:
        children: [server_1]                      # source: sonic-mgmt/veos
        vars: 
            topologies: ['t1-8', 't0-8']  # source: sonic-mgmt/veos
    server_1:
        children: [vm_host_1, vms_1]                        # source: sonic-mgmt/veos
        vars:
            host_var_file: host_vars/linkedin-testbed.yml    # source: sonic-mgmt/veos
    eos:
        children: [vms_1]                            # source: sonic-mgmt/veos
    vms_1:
        host: [VM0100, VM0101, VM0102, VM0103, VM0104, VM0105, VM0106, VM0107]  # source: sonic-mgmt/veos
    vm_host:
        children: [vm_host_1]                    # source: sonic-mgmt/veos
    vm_host_1:
        host: [linkedin-testbed]                             # source: sonic-mgmt/veos

# veos is a dictionary that contains veos information as well as hosts of children groups from veos_groups
# veos is used to generate eos/creds, main.yml, vm_host/creds
# veos_groups pulls information from this dictionary
veos:                                               
    credentials:                        
        username: admin
        password: 123456
    root_path: veos-vm                                              # source: sonic-mgmt/ansible/group_vars/vm_host/main.yml
    vm_images_url: http://10.50.0.9/install                         # source: sonic-mgmt/ansible/group_vars/vm_host/main.yml
    cd_image_filename: Aboot-veos-serial-8.0.0.iso                  # source: sonic-mgmt/ansible/group_vars/vm_host/main.yml
    hdd_image_filename: vEOS-lab-4.15.10M.vmdk                      # source: sonic-mgmt/ansible/group_vars/vm_host/main.yml
    skip_image_downloading: false                                   # source: sonic-mgmt/ansible/group_vars/vm_host/main.yml
    vm_console_base: 7000                                           # source: sonic-mgmt/ansible/group_vars/vm_host/main.yml
    memory: 2097152                                                 # source: sonic-mgmt/ansible/group_vars/vm_host/main.yml
    max_fp_num: 4                                                   # source: sonic-mgmt/ansible/group_vars/vm_host/main.yml
    proxy_env:                                                      # source: sonic-mgmt/ansible/group_vars/vm_host/main.yml
        http_proxy: ""                                              # source: sonic-mgmt/ansible/group_vars/vm_host/main.yml
        https_proxy: ""                                             # source: sonic-mgmt/ansible/group_vars/vm_host/main.yml      
    vm_host_ansible:
        ansible_user: ignw                                          # source: sonic-mgmt/ansible/group_vars/vm_host/creds.yml
        ansible_password: ignw!098                                  # source: sonic-mgmt/ansible/group_vars/vm_host/creds.yml
        ansible_sudo_pass: ignw!098                                 # source: sonic-mgmt/ansible/group_vars/vm_host/creds.yml
    eos_ansible:
        ansible_user: admin                                         # source: sonic-mgmt/ansible/group_vars/eos/creds.yml
        ansible_password: 123456                                  # source: sonic-mgmt/ansible/group_vars/eos/creds.yml
    vms_1:
        VM0100:                                                     # source: sonic-mgmt/ansible/veo:
            ansible_host: 10.50.0.100
        VM0101:
            ansible_host: 10.50.0.101
        VM0102:
            ansible_host: 10.50.0.102
        VM0103:
            ansible_host: 10.50.0.103
        VM0104:
            ansible_host: 10.50.0.104
        VM0105:
            ansible_host: 10.50.0.105
        VM0106:
            ansible_host: 10.50.0.106
        VM0107:
            ansible_host: 10.50.0.107

# testbed dictionary contains information about the testbed
# testbed is used to generate testbed.csv
# testbed dictionary does not cross reference with other files 
testbed:
    t0-eight:
        group-name: ptf                                     # source: sonic-mgmt/ansible/testbed.csv
        topo: "t0-8"                                        # source: sonic-mgmt/ansible/testbed.csv
        ptf_image_name: docker-ptf                          # source: sonic-mgmt/ansible/testbed.csv
        ptf_ip: 10.50.0.200/22                              # source: sonic-mgmt/ansible/testbed.csv
        server: linkedin-testbed                            # source: sonic-mgmt/ansible/testbed.csv
        vm_base: VM0100                                     # source: sonic-mgmt/ansible/testbed.csv
        dut: lab-ignw-seastone-dut-li1                      # source: sonic-mgmt/ansible/testbed.csv
        comment: Test ptf ignw                              # source: sonic-mgmt/ansible/testbed.csv
    t1-eight:
        group-name: ptf                                     # source: sonic-mgmt/ansible/testbed.csv
        topo: "t1-8"                                        # source: sonic-mgmt/ansible/testbed.csv
        ptf_image_name: docker-ptf                          # source: sonic-mgmt/ansible/testbed.csv
        ptf_ip: 10.50.0.200/22                              # source: sonic-mgmt/ansible/testbed.csv
        server: linkedin-testbed                            # source: sonic-mgmt/ansible/testbed.csv
        vm_base: VM0100                                     # source: sonic-mgmt/ansible/testbed.csv
        dut: lab-ignw-seastone-dut-li1                      # source: sonic-mgmt/ansible/testbed.csv
        comment: Test ptf ignw                              # source: sonic-mgmt/ansible/testbed.csv

    ptf_ptf1:
        ansible:
            ansible_host: 10.50.0.200/22                    # source: sonic-mgmt/ansible/lab
            ansible_ssh_user: root
            ansible_ssh_pass: root

# topology dictionary contains information about the topology (which device ports connect to each other)
# topology is used to generate sonic_lab_links
# topology dictionary does not cross reference with other files 
topology:                               # source: sonic-mgmt/ansible/files/sonic_lab_links.csv
    lab-ignw-seastone-dut-li1:                     # source: sonic-mgmt/ansible/files/sonic_lab_links.csv
        interfaces:                     # DUT/ start device
            Ethernet0:
                EndDevice: lab-ignw-seastone-fan-li2 
                EndPort: 0/1
                Bandwidth: 100000
                VlanID: 1681
                VlanMode: Access
            Ethernet4: 
                EndDevice: lab-ignw-seastone-fan-li2
                EndPort: 0/2
                Bandwidth: 100000
                VlanID: 1682
                VlanMode: Access
            Ethernet8:
                EndDevice: lab-ignw-seastone-fan-li2
                EndPort: 0/3
                Bandwidth: 100000
                VlanID: 1683
                VlanMode: Access
            Ethernet12:
                EndDevice: lab-ignw-seastone-fan-li2
                EndPort: 0/4
                Bandwidth: 100000
                VlanID: 1684
                VlanMode: Access
            Ethernet16:
                EndDevice: lab-ignw-seastone-fan-li2
                EndPort: 0/5
                Bandwidth: 100000
                VlanID: 1685
                VlanMode: Access
            Ethernet20:
                EndDevice: lab-ignw-seastone-fan-li2
                EndPort: 0/6
                Bandwidth: 100000 
                VlanID: 1686
                VlanMode: Access
            Ethernet24:
                EndDevice: lab-ignw-seastone-fan-li2
                EndPort: 0/7
                Bandwidth: 100000 
                VlanID: 1687
                VlanMode: Access
            Ethernet28:
                EndDevice: lab-ignw-seastone-fan-li2
                EndPort: 0/8 
                Bandwidth: 100000 
                VlanID: 1688
                VlanMode: Access
    lab-ignw-seastone-fan-li2:
        interfaces:
            "0/32":
                EndDevice: linkedin-testbed
                EndPort: "ens6f0"
                Bandwidth: 100000
                VlanID: ""
                VlanMode: Trunk

# docker_registry is optional. It is not necessary unless you want to change the default location of the docker-registry.
# docker_registry dictionary contains information about the host, username, and password
# docker_registry is used to generate docker_registry.yaml
# docker_registry dictionary does not cross reference with other files 
docker_registry:
    docker_registry_host: 10.50.0.9:5000
    docker_registry_username: " "
    docker_registry_password: " "



